{
    "openapi": "3.0.3",
    "info": {
        "title": "sdfsdfsdf",
        "version": "1.0.0",
        "description": "This is a simple API descriptor."
    },
    "paths": {
        "/users": {
            "summary": "Path used to manage the list of users.",
            "description": "The REST endpoint/path used to list and create zero or more `User` entities.  This path contains a `GET` and `POST` operation to perform the list and create tasks, respectively.",
            "get": {
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        },
                        "description": "Successful response - returns an array of `User` entities."
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ],
                "operationId": "getUsers",
                "summary": "List All Users",
                "description": "Gets a list of all `User` entities."
            },
            "post": {
                "requestBody": {
                    "description": "A new `User` to be created.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Successful response."
                    }
                },
                "operationId": "createUser",
                "summary": "Create a User",
                "description": "Creates a new instance of a `User`."
            }
        },
        "/users/{userId}": {
            "summary": "Path used to manage a single User.",
            "description": "The REST endpoint/path used to get, update, and delete single instances of an `User`.  This path contains `GET`, `PUT`, and `DELETE` operations used to perform the get, update, and delete tasks, respectively.",
            "get": {
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "Successful response - returns a single `User`."
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ],
                "operationId": "getUser",
                "summary": "Get a User",
                "description": "Gets the details of a single instance of a `User`."
            },
            "put": {
                "requestBody": {
                    "description": "Updated `User` information.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "Successful response."
                    }
                },
                "operationId": "updateUser",
                "summary": "Update a User",
                "description": "Updates an existing `User`."
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Successful response."
                    }
                },
                "operationId": "deleteUser",
                "summary": "Delete a User",
                "description": "Deletes an existing `User`."
            },
            "parameters": [
                {
                    "name": "userId",
                    "description": "A unique identifier for a `User`.",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/register": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegister"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "User"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        },
                        "description": "User Created"
                    },
                    "409": {
                        "description": "User with same name exist yet"
                    }
                },
                "security": [
                    {}
                ],
                "operationId": "usersRegisterPost"
            }
        },
        "/users/login/": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegister"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "Login is sucsess"
                    }
                },
                "security": [
                    {
                        "token": []
                    }
                ],
                "operationId": "usersLoginPost"
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "title": "Root Type for User",
                "description": "",
                "required": [
                    "name",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "id": {
                        "format": "int64",
                        "description": "",
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "example": {
                    "name": "John",
                    "address": "ул Пушкина, дом Колотушкина"
                }
            },
            "UserRegister": {
                "title": "Root Type for User",
                "description": "",
                "required": [
                    "name",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "minLength": 8,
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "John",
                    "password": "qwerty123",
                    "address": "ул Пушкина, дом Колотушкина"
                }
            },
            "LoginRequest": {
                "title": "Root Type for LoginRequest",
                "description": "",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "example": {
                    "name": "123",
                    "password": "123"
                }
            },
            "MenuSection": {
                "description": "",
                "enum": [
                    "MAIN_MENU",
                    "SAUCE",
                    "ADDITIONAL",
                    "SNAKS"
                ],
                "type": "string"
            },
            "MenuItemModel": {
                "title": "Root Type for MenuItemModel",
                "description": "",
                "required": [
                    "menuSection",
                    "id",
                    "name",
                    "price"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "menuSection": {
                        "$ref": "#/components/schemas/MenuSection"
                    },
                    "price": {
                        "format": "int32",
                        "type": "integer"
                    }
                },
                "example": {
                    "id": 123,
                    "name": "String",
                    "menuSection": "MenuSection",
                    "price": 123
                }
            }
        },
        "securitySchemes": {
            "token": {
                "scheme": "bearer",
                "type": "http"
            }
        }
    },
    "security": [
        {
            "token": []
        }
    ],
    "tags": [
        {
            "name": "User",
            "description": ""
        }
    ]
}