package ${PACKAGE}.infrastructure.persistence.${ENTITY_LOWERCASE}

import org.springframework.stereotype.Repository

import ${PACKAGE}.application.${ENTITY_LOWERCASE}.${ENTITY}ReadRepo
import ${PACKAGE}.domain.${ENTITY_LOWERCASE}.${ENTITY}Id
import ${PACKAGE}.domain.${ENTITY_LOWERCASE}.${ENTITY}Model

@Repository
class ${ENTITY}ReadInMemRepo(
    private val ${ENTITY_LOWERCASE}Storage: ${ENTITY}Storage,
) : ${ENTITY}ReadRepo {
    override suspend fun getAll(): Result<List<${ENTITY}Model>> =
        Result.success(${ENTITY_LOWERCASE}Storage.items)

    override suspend fun get(${ENTITY_LOWERCASE}Id: ${ENTITY}Id): Result<${ENTITY}Model?> =
        Result.success(
            ${ENTITY_LOWERCASE}Storage.items.find { ${ENTITY_LOWERCASE} ->
                ${ENTITY_LOWERCASE}.id == ${ENTITY_LOWERCASE}Id
            },
        )
}
