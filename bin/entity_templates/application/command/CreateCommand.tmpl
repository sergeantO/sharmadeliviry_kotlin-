package ${PACKAGE}.application.${ENTITY_LOWERCASE}.command

import ${PACKAGE}.domain.TransactionManager
import ${PACKAGE}.domain.${ENTITY_LOWERCASE}.Create${ENTITY}Model
import ${PACKAGE}.domain.${ENTITY_LOWERCASE}.${ENTITY}Model
import ${PACKAGE}.domain.${ENTITY_LOWERCASE}.${ENTITY}WriteRepo

class Create${ENTITY}Command(
    private val tm: TransactionManager,
    private val repo: ${ENTITY}WriteRepo,
) {
    suspend fun execute(${ENTITY_LOWERCASE}: Create${ENTITY}Model): Result<${ENTITY}Model> =
        tm.inTransaction { 
            repo.create(${ENTITY_LOWERCASE}) 
        }
}
